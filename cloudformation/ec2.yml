AWSTemplateFormatVersion: 2010-09-09
Description: Template to deploy an EC2 Instance
Parameters:
  SubnetId:
    Type: AWS::EC2::Subnet::Id
    Description: Subnet to deploy EC2 instance into
  SecurityGroupId:
    Type: List<AWS::EC2::SecurityGroup::Id>
    Description: List of Security Groups to add to EC2 instance
  KeyName:
    Type: AWS::EC2::KeyPair::KeyName
    Description: >-
      Name of an existing EC2 KeyPair to enable SSH access to the instance
  InstanceType:
    Type: String
    Description: Type of instance
    Default: t3.micro
    AllowedValues:
      - t3.nano
      - t3.micro
      - t3.medium
      - t3.large
      - t3.xlarge
      - t3a.nano
      - t3a.micro
      - t3a.small
      - t3a.medium
      - m5.2xlarge
      - m5.4xlarge
      - m5.8xlarge
      - m5a.4xlarge
      - r5.xlarge
      - r5.4large
      - r5.8xlarge
      - r5.12xlarge
      - r5.16xlarge
      - r5.24xlarge
  Env:
    Type: String
    Description: Environment Type
    Default: test
    AllowedValues:
      - test
      - prod

Resources:
  Instance:
    Type: AWS::EC2::Instance
    Properties:
      IamInstanceProfile: !Ref InstanceProfile
      EbsOptimized: true
      SourceDestCheck: true
      ImageId: ami-0bcf5425cdc1d8a85 #Amazon Linux only
      KeyName: !Ref KeyName #Enable keypair ssh login
      InstanceType: !Ref InstanceType
      Monitoring: true
      NetworkInterfaces:
        - AssociatePublicIpAddress: "true"
          DeleteOnTermination: true
          DeviceIndex: 0
          GroupSet: !Ref SecurityGroupId
          SubnetId: !Ref SubnetId
      UserData:
        Fn::Base64: 
          !Sub |
              #!/bin/bash -ex
              yum update -y
              yum install ansible -y
              yum install git -y
              git clone https://github.com/iamakpatel/seclore-test.git /opt
              ansible-playbook -i "localhost," -c local /opt/seclore-test/ansible/playbook.yml -f 10
      Tags:
        - Key: Env
          Value: !Sub ${Env}

  InstanceIamRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
                - ssm.amazonaws.com #Enable ssm login to instance
            Action: 'sts:AssumeRole'
      Policies:
        - PolicyName: SSMInstanceProfileS3Policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: 's3:GetObject'
                Resource:
                  - !Sub arn:${AWS::Partition}:s3:::amazoncloudwatch-agent-${AWS::Region}/*
                  - !Sub arn:${AWS::Partition}:s3:::aws-ssm-${AWS::Region}/*
                  - !Sub arn:${AWS::Partition}:s3:::amazon-ssm-${AWS::Region}/*
                  - !Sub arn:${AWS::Partition}:s3:::amazonlinux.${AWS::Region}.amazonaws.com/*
              - Effect: Allow
                Action:
                  - 'ec2:Describe*'
                  - 'ec2:CreateTags'
                  - 'ec2:ModifyInstanceMetadataOptions'
                  - 'cloudformation:SignalResource'
                  - 'iam:PassRole'
                  - 'ssm:DescribeInstanceInformation'
                  - 'ssm:*'
                Resource: '*'
      ManagedPolicyArns:
        - !Sub 'arn:${AWS::Partition}:iam::aws:policy/AmazonSSMManagedInstanceCore'
        - !Sub 'arn:${AWS::Partition}:iam::aws:policy/CloudWatchAgentServerPolicy'
        - !Sub 'arn:${AWS::Partition}:iam::aws:policy/AmazonSSMDirectoryServiceAccess'
        - !Sub 'arn:${AWS::Partition}:iam::aws:policy/AmazonRoute53FullAccess'
      Tags:
        - Key: Env
          Value: !Sub ${Env}
    CreationPolicy: 
      ResourceSignal: 
        Count: 1
        Timeout: PT30M'

  InstanceProfile:
    Type: 'AWS::IAM::InstanceProfile'
    Properties:
      Path: !Sub /${Env}/
      Roles:
        - !Ref InstanceIamRole

Outputs:
  ec2Id:
    Description: EC2 Instance Id
    Value: !Ref Instance
    Export:
      Name: !Sub "${AWS::StackName}-instance-id"